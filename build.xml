<project name="mps-vimotest-samples" default="build">
  <!-- Generated by MPS -->
  <property name="build.dir" location="build" />
  <property name="build.tmp" location="${build.dir}/tmp/mps-vimotest-samples" />
  <property name="build.layout" location="${build.dir}/artifacts/mps-vimotest-samples" />
  <property name="mps_home" location="${basedir}/build/mps-bundle/mps" />
  <property name="dependencies_home" location="${basedir}/build/mps-bundle/dependencies" />
  <property name="project_home" location="" />
  <property name="artifacts.mps" location="${mps_home}" />
  <property name="artifacts.mps-vimotest" location="${dependencies_home}" />
  <property name="artifacts.alfi-build" location="${dependencies_home}" />
  <property name="artifacts.CppBaseLanguage" location="${dependencies_home}" />
  <property file="${artifacts.mps}/build.properties" prefix="import.mps" />
  <property name="mps.build.number" value="${import.mps.mps.build.number}" />
  <property name="mps.date" value="${import.mps.mps.date}" />
  <property name="mps.build.vcs.number" value="${import.mps.mps.build.vcs.number}" />
  <property name="mps.teamcity.buildConfName" value="${import.mps.mps.teamcity.buildConfName}" />
  <property name="mps.idea.platform.build.number" value="${import.mps.mps.idea.platform.build.number}" />
  <property name="mps.mps.build.counter" value="${import.mps.mps.mps.build.counter}" />
  <property name="mps.runtimeBuild" value="${import.mps.mps.runtimeBuild}" />
  <property name="mpsBootstrapCore.version.major" value="${import.mps.mpsBootstrapCore.version.major}" />
  <property name="mpsBootstrapCore.version.minor" value="${import.mps.mpsBootstrapCore.version.minor}" />
  <property name="mpsBootstrapCore.version.bugfixNr" value="${import.mps.mpsBootstrapCore.version.bugfixNr}" />
  <property name="mpsBootstrapCore.version.eap" value="${import.mps.mpsBootstrapCore.version.eap}" />
  <property name="mpsBootstrapCore.version" value="${import.mps.mpsBootstrapCore.version}" />
  <property name="environment" value="env" />
  <property name="env.JAVA_HOME" value="${java.home}/.." />
  <property name="jdk.home" value="${env.JAVA_HOME}" />
  <property name="mps.generator.skipUnmodifiedModels" value="false" />
  <property name="mps.ant.log" value="warn" />
  
  <path id="path.mps.ant.path">
    <pathelement location="${artifacts.mps}/lib/ant/lib/ant-mps.jar" />
    <fileset dir="${artifacts.mps}/lib">
      <include name="util-8.jar" />
    </fileset>
  </path>
  
  <taskdef resource="jetbrains/mps/build/ant/antlib.xml" classpathref="path.mps.ant.path" />
  
  <generator-settings id="m2m-defaults" strictMode="true" parallelThreads="8" inplaceTransform="false" warnWrongChild="true" createStaticRefs="true" skipUnmodifiedModels="${mps.generator.skipUnmodifiedModels}" />
  
  <target name="assemble" depends="classes, declare-mps-tasks">
    <mkdir dir="${build.layout}" />
    <mkdir dir="${build.tmp}/default/taskmanager.jar" />
    <mkdir dir="${build.tmp}/default/taskmanager.jar/META-INF" />
    <echoxml file="${build.tmp}/default/taskmanager.jar/META-INF/module.xml">
      <module namespace="taskmanager" type="solution" uuid="7ff2565a-9010-45f7-90dd-787927640c82">
        <dependencies>
          <module ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065(JDK)" kind="rt" />
          <module ref="49808fad-9d41-4b96-83fa-9231640f6b2b(JUnit)" kind="rt" />
          <module ref="e9b40a72-6930-481d-bdce-a0a866bf715e(alfi.StandardModelLibrary)" kind="rt" />
          <module ref="52b81ac7-93fd-4e9e-b972-4995882da6d4(jetbrains.mps.baseLanguage.references.runtime)" kind="rt" />
          <module ref="6ef0db41-d3b2-47fe-82ac-d55a42cb6b13(jetbrains.mps.baseLanguage.unitTest.runtime)" kind="rt" />
          <module ref="c234a56a-502f-4751-aded-6f9846fff7ce(jetbrains.mps.lang.test.junit5)" kind="rt" />
          <module ref="63b449db-0918-4a4a-a891-2c430ab133e4(org.junit.junit5)" kind="rt" />
        </dependencies>
        <uses>
          <language id="l:bf897046-1e4e-4c49-b9d6-a7ab6d3f8703:alfi" />
          <language id="l:ded42a5f-0d92-4cc2-b9ff-116aae7175a9:alfi.simplifyAlfiLanguage" />
          <language id="l:e745d4a0-ccf7-4cb3-8db8-0f77222a00bf:alfi.toCppBaseLanguage" />
          <language id="l:d0e1230a-72e3-4b6b-88f2-98d924f7de11:alfi.toJavaBaseLanguage" />
          <language id="l:611ecc9e-0703-4ab9-a13c-fb396c607716:de.vimotest.types" />
          <language id="l:ce7915b5-36b4-4478-a67c-f5a8a72ed4a0:de.vimotest.viewmodel" />
          <language id="l:716e8717-88c0-4280-8c16-b4d88567596f:de.vimotest.viewmodel.testing" />
          <language id="l:f3061a53-9226-4cc5-a443-f952ceaf5816:jetbrains.mps.baseLanguage" />
          <language id="l:f61473f9-130f-42f6-b98d-6c438812c2f6:jetbrains.mps.baseLanguage.unitTest" />
        </uses>
        <classpath>
          <entry path="." />
        </classpath>
        <sources jar="taskmanager-src.jar" descriptor="taskmanager.msd" />
      </module>
    </echoxml>
    <jar destfile="${build.layout}/taskmanager.jar" duplicate="preserve">
      <fileset dir="${build.tmp}/java/out/taskmanager" />
      <fileset dir="${basedir}/solutions/taskmanager/source_gen" includes="**/trace.info, **/exports, **/*.mps, **/checkpoints" />
      <fileset dir="${build.tmp}/default/taskmanager.jar" />
    </jar>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/solutions-taskmanager-models">
      <fileset dir="${basedir}/solutions/taskmanager/models" includes="**/*.mps, **/*.mpsr, **/.model" />
    </copyModels>
    <jar destfile="${build.layout}/taskmanager-src.jar" duplicate="preserve">
      <fileset dir="${basedir}/solutions/taskmanager/source_gen">
        <exclude name="**/trace.info" />
        <exclude name="**/exports" />
        <exclude name="**/checkpoints" />
        <exclude name="**/*.mps" />
      </fileset>
      <zipfileset file="${basedir}/solutions/taskmanager/taskmanager.msd" prefix="module" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/solutions-taskmanager-models" prefix="module/models" />
    </jar>
    <echo file="${build.layout}/build.properties">mps.build.number=${mps.build.number}${line.separator}mps.date=${mps.date}${line.separator}mps.build.vcs.number=${mps.build.vcs.number}${line.separator}mps.teamcity.buildConfName=${mps.teamcity.buildConfName}${line.separator}mps.idea.platform.build.number=${mps.idea.platform.build.number}${line.separator}mps.mps.build.counter=${mps.mps.build.counter}${line.separator}mps.runtimeBuild=${mps.runtimeBuild}${line.separator}mpsBootstrapCore.version.major=${mpsBootstrapCore.version.major}${line.separator}mpsBootstrapCore.version.minor=${mpsBootstrapCore.version.minor}${line.separator}mpsBootstrapCore.version.bugfixNr=${mpsBootstrapCore.version.bugfixNr}${line.separator}mpsBootstrapCore.version.eap=${mpsBootstrapCore.version.eap}${line.separator}mpsBootstrapCore.version=${mpsBootstrapCore.version}</echo>
  </target>
  
  <target name="buildDependents" />
  
  <target name="fetchDependencies" />
  
  <target name="build" depends="assemble" />
  
  <target name="clean">
    <delete dir="${build.tmp}" />
    <delete dir="${build.layout}" />
  </target>
  
  <target name="compileJava" depends="java.compile.taskmanager" />
  
  <target name="processResources" />
  
  <target name="classes" depends="compileJava, processResources" />
  
  <target name="test" depends="classes" />
  
  <target name="check" depends="test" />
  
  <target name="generate" depends="declare-mps-tasks, fetchDependencies">
    <echo message="generating" />
    <generate fork="true" logLevel="${mps.ant.log}">      
      <settings refid="m2m-defaults" />
      <plugin path="${artifacts.CppBaseLanguage}/CppBaseLanguage" id="CppBaseLanguage" />
      <plugin path="${artifacts.alfi-build}/alfi" id="alfi" />
      <plugin path="${artifacts.mps-vimotest}/mps-vimotest" id="de.vimotest" />
      <plugin path="${artifacts.mps}/lib/mps-workbench.jar" id="com.intellij.modules.mps" />
      <plugin path="${artifacts.mps}/plugins/mps-build" id="jetbrains.mps.build" />
      <plugin path="${artifacts.mps}/plugins/mps-core" id="jetbrains.mps.core" />
      <plugin path="${artifacts.mps}/plugins/mps-junit5" id="jetbrains.mps.junit5" />
      <plugin path="${artifacts.mps}/plugins/mps-testing" id="jetbrains.mps.testing" />
      <plugin path="${artifacts.mps}/plugins/mps-tooltips" id="jetbrains.mps.editor.tooltips" />
      <chunk>
        <module file="${basedir}/solutions/taskmanager/taskmanager.msd" />
      </chunk>
      <jvmargs>
        <arg value="-ea" />
        <arg value="-Xmx512m" />
        <arg value="--add-opens=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED" />
      </jvmargs>
      <macro name="mps_home" path="${mps_home}" />
      <macro name="dependencies_home" path="${dependencies_home}" />
      <macro name="project_home" path="${project_home}" />
    </generate>
  </target>
  
  <target name="declare-mps-tasks" />
  
  <target name="makeDependents" />
  
  <target name="java.compile.taskmanager" depends="fetchDependencies">
    <mkdir dir="${basedir}/solutions/taskmanager/source_gen" />
    <mkdir dir="${build.tmp}/java/out/taskmanager" />
    <javac destdir="${build.tmp}/java/out/taskmanager" fork="true" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/solutions/taskmanager/source_gen" />
      </src>
      <classpath>
        <fileset file="${artifacts.mps}/lib/mps-core.jar" />
        <fileset file="${artifacts.mps}/lib/mps-annotations.jar" />
        <fileset file="${artifacts.mps}/lib/mps-collections.jar" />
        <fileset file="${artifacts.mps}/lib/mps-environment.jar" />
        <fileset file="${artifacts.mps}/lib/mps-openapi.jar" />
        <fileset file="${artifacts.mps}/lib/mps-closures.jar" />
        <fileset file="${artifacts.mps}/lib/mps-tuples.jar" />
        <fileset file="${artifacts.mps}/lib/mps-references.jar" />
        <fileset file="${artifacts.mps}/lib/mps-behavior-api.jar" />
        <fileset file="${artifacts.mps}/lib/mps-behavior-runtime.jar" />
        <fileset file="${artifacts.mps}/lib/mps-context.jar" />
        <fileset file="${artifacts.mps}/lib/mps-constraints-runtime.jar" />
        <fileset file="${artifacts.mps}/lib/mps-persistence.jar" />
        <fileset file="${artifacts.mps}/lib/mps-project-check.jar" />
        <fileset file="${artifacts.mps}/lib/junit4.jar" />
        <fileset file="${artifacts.mps}/lib/annotations.jar" />
        <fileset file="${artifacts.mps}/lib/util-8.jar" />
        <fileset file="${artifacts.mps}/lib/trove.jar" />
        <fileset file="${artifacts.alfi-build}/alfi/languages/alfi-modules/alfi.StandardModelLibrary.jar" />
        <fileset file="${artifacts.mps-vimotest}/mps-vimotest/languages/mps-build/de.vimotest.genplan.jar" />
        <fileset file="${artifacts.mps}/plugins/mps-testing/languages/baseLanguage/jetbrains.mps.baseLanguage.unitTest.runtime.jar" />
        <fileset file="${artifacts.mps}/plugins/mps-testing/languages/languageDesign/jetbrains.mps.lang.test.junit5.jar" />
        <fileset dir="${artifacts.mps}/plugins/mps-junit5/lib" includes="apiguardian-api-1.1.2.jar" />
        <fileset dir="${artifacts.mps}/plugins/mps-junit5/lib" includes="junit-jupiter-api-5.9.3.jar" />
        <fileset dir="${artifacts.mps}/plugins/mps-junit5/lib" includes="junit-jupiter-engine-5.9.3.jar" />
        <fileset dir="${artifacts.mps}/plugins/mps-junit5/lib" includes="junit-jupiter-migrationsupport-5.9.3.jar" />
        <fileset dir="${artifacts.mps}/plugins/mps-junit5/lib" includes="junit-jupiter-params-5.9.3.jar" />
        <fileset dir="${artifacts.mps}/plugins/mps-junit5/lib" includes="junit-platform-commons-1.9.3.jar" />
        <fileset dir="${artifacts.mps}/plugins/mps-junit5/lib" includes="junit-platform-engine-1.9.3.jar" />
        <fileset dir="${artifacts.mps}/plugins/mps-junit5/lib" includes="junit-platform-launcher-1.9.3.jar" />
        <fileset dir="${artifacts.mps}/plugins/mps-junit5/lib" includes="junit-vintage-engine-5.9.3.jar" />
        <fileset dir="${artifacts.mps}/plugins/mps-junit5/lib" includes="opentest4j-1.2.0.jar" />
        <fileset dir="${artifacts.mps}/plugins/mps-junit5/lib" includes="junit-platform-reporting-1.9.3.jar" />
      </classpath>
    </javac>
    <copy todir="${build.tmp}/java/out/taskmanager">
      <fileset dir="${basedir}/solutions/taskmanager/source_gen" excludes="**/*.java" />
    </copy>
  </target>
  
  <target name="cleanSources">
    <delete dir="${basedir}/solutions/taskmanager/source_gen" />
  </target>
</project>